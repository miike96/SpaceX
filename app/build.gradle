plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
   id 'kotlinx-serialization'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.mikeschvedov.spacex"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Retrofit
    def Retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$Retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$Retrofit_version"

    // OKHttp
    def okhttp_version = '5.0.0-alpha.2'
    implementation("com.squareup.okhttp3:okhttp:$okhttp_version")
    implementation("com.squareup.okhttp3:logging-interceptor:$okhttp_version")

    // Coroutines
    def coroutines_version = '1.6.3'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version")

    // Lifecycle aware
    def lifecycle_version = '2.5.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    //hilt:
    def hilt_version = '2.42'
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // work manager with hilt
    implementation "androidx.hilt:hilt-work:1.0.0"
    kapt("androidx.hilt:hilt-compiler:1.0.0")

    //work manager
    // Kotlin + coroutines
    implementation("androidx.work:work-runtime-ktx:2.7.1")

    // Room
    def roomVersion = "2.4.2"
    implementation("androidx.room:room-runtime:$roomVersion")
    annotationProcessor("androidx.room:room-compiler:$roomVersion")
    implementation("androidx.room:room-ktx:$roomVersion")
    kapt("androidx.room:room-compiler:$roomVersion")
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'



    // Json serialization (Used for type converters)\
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0-RC")

    //circle image view
    implementation 'de.hdodenhof:circleimageview:3.1.0'
}
// Allow references to generated code
kapt {
    correctErrorTypes = true
}
